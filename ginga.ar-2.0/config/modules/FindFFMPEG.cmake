# - Find FFMPEG
# Find native ffmpeg includes and library
# This module defines
#  FFMPEG-${COMPONENT}_INCLUDE_DIRS, where to find the ffmpeg component header files.
#  FFMPEG-${COMPONENT}_LIBRARIES, the libraries needed to use the ffmpeg component.
#  FFMPEG-${COMPONENT}_FOUND, If false, do not try to use the ffmpeg component library.
# also defined, but not for general use are
#  FFMPEG-${COMPONENT}_LIBRARY, where to find the ffmpeg component library.

SET(HAVE_FFMPEG 0)
IF( FFMPEG_FIND_COMPONENTS )

	FOREACH(COMPONENT ${FFMPEG_FIND_COMPONENTS})
		STRING(TOUPPER ${COMPONENT} COMPONENT_UPPERCASE)


		FIND_PATH(FFMPEG-${COMPONENT_UPPERCASE}_INCLUDE_DIRS lib${COMPONENT}/${COMPONENT}.h )

		LIST(APPEND FFMPEG-${COMPONENT_UPPERCASE}_NAMES  ${COMPONENT} )
		FIND_LIBRARY(FFMPEG-${COMPONENT_UPPERCASE}_LIBRARY NAMES ${FFMPEG-${COMPONENT_UPPERCASE}_NAMES} )

		# handle the QUIETLY and REQUIRED arguments and set FFMPEG-${COMPONENT_UPPERCASE}_FOUND to TRUE if 
		# all listed variables are TRUE
		INCLUDE(FindPackageHandleStandardArgs)
		FIND_PACKAGE_HANDLE_STANDARD_ARGS(FFMPEG-${COMPONENT_UPPERCASE} DEFAULT_MSG FFMPEG-${COMPONENT_UPPERCASE}_LIBRARY FFMPEG-${COMPONENT_UPPERCASE}_INCLUDE_DIRS)

		IF(FFMPEG-${COMPONENT_UPPERCASE}_FOUND)
			SET(FFMPEG-${COMPONENT_UPPERCASE}_LIBRARIES ${FFMPEG-${COMPONENT_UPPERCASE}_LIBRARY})
			MATH(EXPR HAVE_FFMPEG "${HAVE_FFMPEG} | 1")
		ENDIF(FFMPEG-${COMPONENT_UPPERCASE}_FOUND)

		MARK_AS_ADVANCED(FFMPEG-${COMPONENT_UPPERCASE}_LIBRARY FFMPEG-${COMPONENT_UPPERCASE}_INCLUDE_DIRS )

	ENDFOREACH( COMPONENT )
ENDIF( FFMPEG_FIND_COMPONENTS )
